* {
  box-sizing: border-box;
}

.container {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  max-width: 700px;
  width: 70%;
  margin: 25px auto 0 auto;
}

body {
  font-family: 'Inconsolata', monospace;
  margin: 0;
  /* font-family: 'Roboto', sans-serif; */
}

h2, h3, h4 {
  font-family: 'IBM Plex Mono', monospace;
  font-weight: 700; 
  color: #ff7b7b;
  margin-top: 0;
  margin-bottom: 0;
  font-size: 1.7em;
}

h1 {
  font-family: 'IBM Plex Mono', monospace;
  font-weight: 700;
  font-size: 2em;
  margin-top: 0;
  color: #197eb1; 
}

/* .page-heading{
  background: -webkit-linear-gradient(#51bdf3, #197eb1);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  text-decoration-line: underline;
  text-decoration-color: #ff7b7b;
  text-decoration-thickness: 1px;
  text-underline-offset: 6px;
} */

/* .fa-gradient {
  background: -webkit-linear-gradient(#51bdf3, #197eb1);
  background-clip: text;
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;
} */

.byline {
  font-weight: 900;
  font-size: .8em;
  color: #777;
  text-transform: uppercase;
  margin-bottom: 0;
}

i {
  margin-right: .5em;
}

p {
  color: black;
  font-family: 'Inconsolata', monospace;
  font-weight: 400;
  font-size: 1.2em;
  line-height: 1.8em;
  margin: 0 0 1.5rem;
}

.top-line {
  width: 100%;
  border-top: 5px;
  border-style: solid;
  z-index: 100;
  border-color: #ff7b7b;
}

.selfie {
  border-radius: 50%;
  transition: border-radius 1.5s .2s ease;
}

.selfie:hover {
  border-radius: 25% 10%;
}

header a {
  text-decoration: none;
  color: black;
}

.navbar {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  margin-bottom: 20px;
}

.navbar nav ul {
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
}

.navbar nav li {
  list-style: none;
}

.navbar nav a {
  font-weight: 600;
  font-size: 1.2em;
  letter-spacing: 0.03em;
  margin: 0 25px 0 0;
}

.navbar nav a:hover {
  color: #ff7b7b;
}

footer {
  margin-left: auto;
  margin-right: auto;
}

footer p {
  color: #197eb1; 
  font-size: .8em;
}

.pics-container {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
}

figure {
  margin: 10px;
}

figcaption {
  text-align: center;
  font-size: .8em;
  padding: 3px;
}

figure:nth-child(odd) figcaption {
  background: #51bdf3;
}

figure:nth-child(even) figcaption {
  background: #ff7b7b;
}

/* Contact form styling */
utton, input, select, textarea {
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  display: block;
  margin: 1rem;
}

input[type=submit] {
  width: 100%;
  background-color: #2196F3;
}
input[type=password]:focus {
  background-color: #ff7b7b;
  outline: none;
}

input {
  border-radius: 15px;
}

fieldset {
  border: none;
}

fieldset input {
  display: inline;
}

/* Hide the browser's default checkbox. */
.checkbox input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Customize the labels */
.checkbox label {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-top: 12px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
}

/* On mouse-over, add a grey background color */
.checkbox label:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When a checkbox is checked, add a blue background */
.checkbox input:checked ~ .checkmark {
  background-color: #2196F3;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.checkbox .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}